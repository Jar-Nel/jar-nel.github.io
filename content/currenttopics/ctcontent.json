[
    {
        "entry" : "ct0",
        "pagetitle": "CT:Template Test",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Template Test</li>",
        "title": "Current Topics: Template Test",
        "author": "Jared Nelson",
        "date": "01/17/2019",
        "assignment": "<p>Testing Assignment area<br />Line 2</p>",
        "responsetitle": "Testing Response Title",
        "response": "<p>Testing Response area<br />Line 2</p>"
    },
    {
        "entry" : "ct1",
        "pagetitle": "CT:Hello World",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Hello World</li>",
        "title": "Current Topics: Hello World",
        "author": "Jared Nelson",
        "date": "01/17/2019",
        "assignment": "<p>Submit the following into a reply<br /><ul><li>A Picture of you and a printscreen of the computer you are using for this course.</li><li>Tell about yourself and what OS you are using for the course</li></ul></p>",
        "responsetitle": "About Me",
        "response": "<img src='content/currenttopics/ct1_desktop.png' style='width:800px; max-width:90%;' /><br /><p>I am attending FCC to get my associates degree and to transfer to CSUF for degree completion in the near future.  I have dabbled in some line of business web applications in a WISC stack.  I am interested in learning more about web design and creating responsive pages.  With LOB applications you generally have the benefit of knowing the target client environment which can make one lazy when it comes to fallback code and resolution targets. :)<br /><br />        I am running Windows 10 Enterprise 64-bit Version 1809 (Build 17763.288)</p>"
    },
    {
        "entry" : "ct2",
        "pagetitle": "CT:HTTPS",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">HTTPS</li>",
        "title": "Current Topics: HTTPS",
        "author": "Jared Nelson",
        "date": "01/21/2019",
        "assignment": "<p>Watch this video and consider the various topics covered and find additional research regarding the topics introduced here.  Write about your selected topics, provide links to your research finding.<br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kBzbKUirOFk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>",
        "responsetitle": "HTTPS Certificates / Let's Encrypt",
        "response": "<p>HTTPS Certificates can still be prohibitively expensive for small and non-commercial websites.  There are a few places where free certificates are being made available, however.   One of those is Let's Encrypt, which provides free HTTPS certificates for websites.  Let's Encrypt itself has some barriers web developers and web hosts have to overcome to use, however, as certificate assignment and management isn't as simple as commercial certificate providers and might require the use of scripting to get set up.  Fortunately, several organizations are developing tools to make using Let's Encrypt simpler.  There are many tools available for popular web servers that help automate the process of requesting and binding certificates from Let's Encrypt.  As these certificates become less costly and easier to implement HTTPS usage will continue to rise.<br /><br />I was happy to find that there were several tools available for implementing Let's Encrypt with the IIS Web Server, for instance:<br /><br /><a href='https://weblog.west-wind.com/posts/2016/Feb/22/Using-Lets-Encrypt-with-IIS-on-Windows'>Using Let's Encrypt with IIS on Windows</a></p>"
    },
    {
        "entry" : "ct3",
        "pagetitle": "CT:Microsoft Github",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Microsoft Github</li>",
        "title": "Current Topics: Microsoft Purchases Github",
        "author": "Jared Nelson",
        "date": "01/24/2019",
        "assignment": "<p>Over this summer Microsoft purchased github and it is a BIG deal for this very important platform!  Watch the video and do some research on your own and find what others have said about what this may or may not do for the platform.  Share your thoughts.<br /><br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m164XggdRGA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>",
        "responsetitle": "What Microsoft Means for GitHub",
        "response": "<p>There seems to be a perception that Google is somehow better for Open Source software than Microsoft.&nbsp; In the current environment, that couldn't be further from the truth, and I don't know why the perception continues to exist.</p>        <p>Google certainly uses Open Source software, but <em>uses </em>is the key word.&nbsp; Google has become very good at exploiting the work of the OSS community and making billions on the back of free volunteer labor, wrapping up that open software in layers of proprietary code designed to lock people and businesses into Google's system despite the open nature of the foundations that code was originally built upon.</p><br /><p>Ars Technica had a great write up of how Google does this with Android as an example:</p><p><a href=\"https://arstechnica.com/gadgets/2018/07/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/\">Google&rsquo;s iron grip on Android: Controlling open source by any means necessary.</a></p><p>&nbsp;</p><p>Meanwhile, under the leadership of Satya Nadella , Microsoft has become a leading <em>contributor</em> to open source, utilizing their own resources to bolster and support community projects and balancing their give and take with the OSS community.</p><p>GitHub is a good fit for Microsoft for a number of reasons.&nbsp; They have several company products, including the renowned Visual Studio Code, available for open source collaboration and development on GitHub;&nbsp; Hundreds of Microsoft employees are using GitHub for thousands of personal projects; and Microsoft recently completed transitioning the Windows development code base over to git for their internal development, making several important and welcome contributions to git in the process.</p><p>As Peter Bright wrote: \"<i>Publishing source code is not the same as developing in the open; there are corporate open-source projects where all development is done privately, in-house, with few-to-no outside contributions accepted. The code is published periodically (often without the full commit history, so providing no way to see how the code was incrementally developed) with an open-source license attached. For the most part, Microsoft hasn't used this model; instead, it uses the GitHub for authoritative repositories, with all development published to GitHub as it's done. Microsoft welcomes outside contributions, uses GitHub's issue tracking to publicly record bugs and feature requests, and the projects engage with their user and developer communities to prioritize new development. <strong>This is a corporation doing open source the right way.</strong></i>\" (emphasis added)</p><p><a href=\"https://arstechnica.com/gadgets/2018/06/everyone-complaining-about-microsoft-buying-github-needs-to-offer-a-better-solution/\">Everyone complaining about Microsoft buying GitHub needs to offer a better solution.&nbsp;</a>[Peter Bright, <em>Ars Tecnhica</em>]</p>        <p>Microsoft also added virtual file systems and FUSE support to Windows 10 to help facilitate Windows development.&nbsp; As part of that process they developed a git based virtual file system to handle git requests for the very large windows code base and to track the large number of daily builds.&nbsp; Microsoft added this to git as part of the git open source. They started this work at the beginning of 2017.</p>        <p><a href=\"https://arstechnica.com/information-technology/2017/02/microsoft-hosts-the-windows-source-in-a-monstrous-300gb-git-repository/\">Microsoft hosts the Windows source in a monstrous 300GB Git repository</a><br /><em>Virtualized file system approach makes Git work better for huge repositories.</em></p>        <p>Microsoft's early embracing of git for development, their multitude of open source projects, and their decision to adapt and use git for Windows development makes their purchase of GitHub a good fit for the company.</p>        <p>Microsoft's continued support of open source is a benefit to us all.&nbsp; In fact, in January 2019 GitHub removed their limits on private repositories at Microsoft's direction.&nbsp;</p>        <p><a href=\"https://github.blog/2019-01-07-new-year-new-github/\">New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering</a></p>        <p>&nbsp;</p>        <p>&nbsp;</p>"
    },
    {
        "entry" : "ct4",
        "pagetitle": "CT:UTF8",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">UTF8</li>",
        "title": "Current Topics: UTF8",
        "author": "Jared Nelson",
        "date": "02/01/2019",
        "assignment": "<p>Understanding character encoding standards like ASCII and Unicode are important.  Watch this video and find terms you want to learn more about and do some research.  Provide links to website/articles that helped understand new terms to you. </p><br /><br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/MijmeoH9LT4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> ",
        "responsetitle": "UTF8 Explained",
        "response": "<p>In the beginning, there was ASCII (at least in English speaking regions of the world).&nbsp;</p> <p>This worked well enough as documents that were shared with other areas of the world were generally printed and mailed, or later faxed.&nbsp; But the rise of the internet and the World Wide Web brought a growing need for electronic document exchange, something that was problematic with the different and incompatible encoding methods used throughout the world.&nbsp; A standard called Unicode (Universal Coded Character Set) was developed that had room for all the different characters used throughout the world.</p> <p>&nbsp;</p> <p>UTF-8 (Unicode Transformation Format) was developed to solve compatibility problems with ASCII systems that couldn't understand Unicode.&nbsp; It is an ingenious encoding method that allows for all the address space of Unicode but stores it in a compact, efficient, format that saves on space and doesn't break compatibility with older systems.</p> <p>&nbsp;</p> <p>The UTF8-file is made up of 8-bit blocks.&nbsp; The existing 7-bit ASCII character set was added to UTF8 with a leading zero bit.&nbsp; Characters outside of ASCII had a leading bit of 1, with an additional 1 for each byte block used.</p> <table style=\"font-size: 12px;\"> <tbody> <tr> <th style=\"border: 1px solid #ccc;\">Number<br />of bytes</th> <th style=\"border: 1px solid #ccc;\">Bits for<br />code point</th> <th style=\"border: 1px solid #ccc;\">First<br />code point</th> <th style=\"border: 1px solid #ccc;\">Last<br />code point</th> <th style=\"border: 1px solid #ccc;\">Byte 1</th> <th style=\"border: 1px solid #ccc;\">Byte 2</th> <th style=\"border: 1px solid #ccc;\">Byte 3</th> <th style=\"border: 1px solid #ccc;\">Byte 4</th> </tr> <tr> <td style=\"text-align: center;\">1</td> <td style=\"text-align: center;\">7</td> <td style=\"text-align: right;\">U+0000</td> <td style=\"text-align: right;\">U+007F</td> <td><code>0xxxxxxx</code></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">2</td> <td style=\"text-align: center;\">11</td> <td style=\"text-align: right;\">U+0080</td> <td style=\"text-align: right;\">U+07FF</td> <td><code>110xxxxx</code></td> <td><code>10xxxxxx</code></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">3</td> <td style=\"text-align: center;\">16</td> <td style=\"text-align: right;\">U+0800</td> <td style=\"text-align: right;\">U+FFFF</td> <td><code>1110xxxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">4</td> <td style=\"text-align: center;\">21</td> <td style=\"text-align: right;\">U+10000</td> <td style=\"text-align: right;\">U+10FFFF</td> <td><code>11110xxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> </tr> </tbody> </table> <p>&nbsp;</p> <p>1 byte contains the entirety of US-ASCII.</p> <p>2 bytes added an additional 1,920 characters, enough to encode all Latin-script alphabets, Greek, Cryllic, Coptic, Armenian, Hebrew, Arabic, Syriac, Thaana, and N'ko, as well as combining Diacritical marks.</p> <p>3 bytes covers the rest of the Basic Multilingual Plane, including Chinese, Japanese, and Korean characters.</p> <p>4 bytes covers historic scripts, mathematical symbols, and emoji characters.</p> <p><a href=\"https://sjohannes.wordpress.com/2009/05/18/utf-8-explained/\">https://sjohannes.wordpress.com/2009/05/18/utf-8-explained/</a></p> <p>&nbsp;</p>"
    },
    {
        "entry" : "ct5",
        "pagetitle": "CT:Semantic Versioning",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Semantic Versioning</li>",
        "title": "Current Topics: Semantic Versioning",
        "author": "Jared Nelson",
        "date": "02/07/2019",
        "assignment": "<p>Hello Everyone! I'm guessing you all have seem and know a bit about software version(s), but I'm also guessing most have not heard of this system.  So check out this video and then find some software, package or related and describe it's current version in the semantic versioning context. I'll cover this in the video for this week.</p><br /><br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QMUSkra7Blk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
        "responsetitle": "Semantic Versioning",
        "response": "<p>Semantic versioning is useful in the way it conveys messages to developers and users of a software package or API by having pre-defined meanings behind the version numbers and the number positions.&nbsp; I have some software I need to interact with that does <strong>not</strong> use semantic versioning and I have to go through a whole battery of tests and compatibility checks each time it is updated.&nbsp; If they used semantic versioning I would know when I can get by with fewer tests (minor versions shouldn't break backward compatibility), and when I need to do more (major versions break compatibility).&nbsp; If they signaled in their versioning (or at all) when an update is potentially backward compatibility breaking it would influence how I approach my own testing and certification of the software.</p> <p>I found an interesting FAQ on semantic versioning <a href=\"https://semver.org/\">here</a>.</p> <p>Bootstrap appears to use semantic versioning.&nbsp; They are currently on version 4.2.1.&nbsp; It's the 4th major release of Bootstrap, it is not fully backward compatible with the 3rd release, there have been two feature updates, and one patch since the last feature update.</p> <p>&nbsp;</p> <p>&nbsp;</p>"
    },
    {
        "entry" : "ct6",
        "pagetitle": "CT:Learn MORE about FTP!",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Learn MORE about FTP!</li>",
        "title": "Current Topics: Learn MORE about FTP!",
        "author": "Jared Nelson",
        "date": "02/18/2019",
        "assignment": "<img src='content/currenttopics/ct6_ftp-protocol.gif' /><p>We are not going to be using FTP, but you need to know what is it! So search FTP protocol, software and issues and post your research</p>",
        "responsetitle": "FTP and SFTP",
        "response": "<p>FTP, or File Transfer Protocol, was used early on in the internet for transferring files between computers.&nbsp; HTTP was not designed for, or up to the task, of transferring large binary files.&nbsp; FTP was often invoked from the command line early on but several graphical interfaces have been made over the years.&nbsp; My favorite modern graphical FTP client is <a href=\"https://filezilla-project.org/\">FileZilla</a>.</p> <p>Unfortunately FTP does not make use of encryption on its own and is best used over a VPN or with some other encrypted security layer.&nbsp; Using FTP in the open is a huge security risk for your servers and your data.&nbsp; SFTP, or SSH File Transfer Protocol, uses a secure SSH channel for its operations, and is the better choice for FTP functionality these days.&nbsp; <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server\">How to use SFTP</a>.</p> <p>You <a href=\"https://www.nerdster.com.au/info/knowledge-base/sftp-with-filezilla-server/\">can use SFTP with FileZilla</a>, client and server.</p>"
    }
]