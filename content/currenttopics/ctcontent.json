[
    {
        "entry" : "ct0",
        "pagetitle": "CT:Template Test",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Template Test</li>",
        "title": "Current Topics: Template Test",
        "author": "Jared Nelson",
        "date": "01/17/2019",
        "assignment": "<p>Testing Assignment area<br />Line 2</p>",
        "responsetitle": "Testing Response Title",
        "response": "<p>Testing Response area<br />Line 2</p>"
    },
    {
        "entry" : "ct1",
        "pagetitle": "CT:Hello World",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Hello World</li>",
        "title": "Current Topics: Hello World",
        "author": "Jared Nelson",
        "date": "01/17/2019",
        "assignment": "assignment.html",
        "responsetitle": "About Me",
        "response": "response.html"
    },
    {
        "entry" : "ct2",
        "pagetitle": "CT:HTTPS",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">HTTPS</li>",
        "title": "Current Topics: HTTPS",
        "author": "Jared Nelson",
        "date": "01/21/2019",
        "assignment": "assignment.html",
        "responsetitle": "HTTPS Certificates / Let's Encrypt",
        "response": "response.html"
    },
    {
        "entry" : "ct3",
        "pagetitle": "CT:Microsoft Github",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Microsoft Github</li>",
        "title": "Current Topics: Microsoft Purchases Github",
        "author": "Jared Nelson",
        "date": "01/24/2019",
        "assignment": "assignment.html",
        "responsetitle": "What Microsoft Means for GitHub",
        "response": "response.html"
    },
    {
        "entry" : "ct4",
        "pagetitle": "CT:UTF8",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">UTF8</li>",
        "title": "Current Topics: UTF8",
        "author": "Jared Nelson",
        "date": "02/01/2019",
        "assignment": "<p>Understanding character encoding standards like ASCII and Unicode are important.  Watch this video and find terms you want to learn more about and do some research.  Provide links to website/articles that helped understand new terms to you. </p><br /><br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/MijmeoH9LT4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> ",
        "responsetitle": "UTF8 Explained",
        "response": "<p>In the beginning, there was ASCII (at least in English speaking regions of the world).&nbsp;</p> <p>This worked well enough as documents that were shared with other areas of the world were generally printed and mailed, or later faxed.&nbsp; But the rise of the internet and the World Wide Web brought a growing need for electronic document exchange, something that was problematic with the different and incompatible encoding methods used throughout the world.&nbsp; A standard called Unicode (Universal Coded Character Set) was developed that had room for all the different characters used throughout the world.</p> <p>&nbsp;</p> <p>UTF-8 (Unicode Transformation Format) was developed to solve compatibility problems with ASCII systems that couldn't understand Unicode.&nbsp; It is an ingenious encoding method that allows for all the address space of Unicode but stores it in a compact, efficient, format that saves on space and doesn't break compatibility with older systems.</p> <p>&nbsp;</p> <p>The UTF8-file is made up of 8-bit blocks.&nbsp; The existing 7-bit ASCII character set was added to UTF8 with a leading zero bit.&nbsp; Characters outside of ASCII had a leading bit of 1, with an additional 1 for each byte block used.</p> <table style=\"font-size: 12px;\"> <tbody> <tr> <th style=\"border: 1px solid #ccc;\">Number<br />of bytes</th> <th style=\"border: 1px solid #ccc;\">Bits for<br />code point</th> <th style=\"border: 1px solid #ccc;\">First<br />code point</th> <th style=\"border: 1px solid #ccc;\">Last<br />code point</th> <th style=\"border: 1px solid #ccc;\">Byte 1</th> <th style=\"border: 1px solid #ccc;\">Byte 2</th> <th style=\"border: 1px solid #ccc;\">Byte 3</th> <th style=\"border: 1px solid #ccc;\">Byte 4</th> </tr> <tr> <td style=\"text-align: center;\">1</td> <td style=\"text-align: center;\">7</td> <td style=\"text-align: right;\">U+0000</td> <td style=\"text-align: right;\">U+007F</td> <td><code>0xxxxxxx</code></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">2</td> <td style=\"text-align: center;\">11</td> <td style=\"text-align: right;\">U+0080</td> <td style=\"text-align: right;\">U+07FF</td> <td><code>110xxxxx</code></td> <td><code>10xxxxxx</code></td> <td style=\"background: darkgray;\"></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">3</td> <td style=\"text-align: center;\">16</td> <td style=\"text-align: right;\">U+0800</td> <td style=\"text-align: right;\">U+FFFF</td> <td><code>1110xxxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> <td style=\"background: darkgray;\"></td> </tr> <tr> <td style=\"text-align: center;\">4</td> <td style=\"text-align: center;\">21</td> <td style=\"text-align: right;\">U+10000</td> <td style=\"text-align: right;\">U+10FFFF</td> <td><code>11110xxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> <td><code>10xxxxxx</code></td> </tr> </tbody> </table> <p>&nbsp;</p> <p>1 byte contains the entirety of US-ASCII.</p> <p>2 bytes added an additional 1,920 characters, enough to encode all Latin-script alphabets, Greek, Cryllic, Coptic, Armenian, Hebrew, Arabic, Syriac, Thaana, and N'ko, as well as combining Diacritical marks.</p> <p>3 bytes covers the rest of the Basic Multilingual Plane, including Chinese, Japanese, and Korean characters.</p> <p>4 bytes covers historic scripts, mathematical symbols, and emoji characters.</p> <p><a href=\"https://sjohannes.wordpress.com/2009/05/18/utf-8-explained/\">https://sjohannes.wordpress.com/2009/05/18/utf-8-explained/</a></p> <p>&nbsp;</p>"
    },
    {
        "entry" : "ct5",
        "pagetitle": "CT:Semantic Versioning",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Semantic Versioning</li>",
        "title": "Current Topics: Semantic Versioning",
        "author": "Jared Nelson",
        "date": "02/07/2019",
        "assignment": "<p>Hello Everyone! I'm guessing you all have seem and know a bit about software version(s), but I'm also guessing most have not heard of this system.  So check out this video and then find some software, package or related and describe it's current version in the semantic versioning context. I'll cover this in the video for this week.</p><br /><br /><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QMUSkra7Blk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
        "responsetitle": "Semantic Versioning",
        "response": "<p>Semantic versioning is useful in the way it conveys messages to developers and users of a software package or API by having pre-defined meanings behind the version numbers and the number positions.&nbsp; I have some software I need to interact with that does <strong>not</strong> use semantic versioning and I have to go through a whole battery of tests and compatibility checks each time it is updated.&nbsp; If they used semantic versioning I would know when I can get by with fewer tests (minor versions shouldn't break backward compatibility), and when I need to do more (major versions break compatibility).&nbsp; If they signaled in their versioning (or at all) when an update is potentially backward compatibility breaking it would influence how I approach my own testing and certification of the software.</p> <p>I found an interesting FAQ on semantic versioning <a href=\"https://semver.org/\">here</a>.</p> <p>Bootstrap appears to use semantic versioning.&nbsp; They are currently on version 4.2.1.&nbsp; It's the 4th major release of Bootstrap, it is not fully backward compatible with the 3rd release, there have been two feature updates, and one patch since the last feature update.</p> <p>&nbsp;</p> <p>&nbsp;</p>"
    },
    {
        "entry" : "ct6",
        "pagetitle": "CT:Learn MORE about FTP!",
        "breadcrumb" : "<li class=\"breadcrumb-item active\">Learn MORE about FTP!</li>",
        "title": "Current Topics: Learn MORE about FTP!",
        "author": "Jared Nelson",
        "date": "02/18/2019",
        "assignment": "<img src='content/currenttopics/ct6_ftp-protocol.gif' /><p>We are not going to be using FTP, but you need to know what is it! So search FTP protocol, software and issues and post your research</p>",
        "responsetitle": "FTP and SFTP",
        "response": "<p>FTP, or File Transfer Protocol, was used early on in the internet for transferring files between computers.&nbsp; HTTP was not designed for, or up to the task, of transferring large binary files.&nbsp; FTP was often invoked from the command line early on but several graphical interfaces have been made over the years.&nbsp; My favorite modern graphical FTP client is <a href=\"https://filezilla-project.org/\">FileZilla</a>.</p> <p>Unfortunately FTP does not make use of encryption on its own and is best used over a VPN or with some other encrypted security layer.&nbsp; Using FTP in the open is a huge security risk for your servers and your data.&nbsp; SFTP, or SSH File Transfer Protocol, uses a secure SSH channel for its operations, and is the better choice for FTP functionality these days.&nbsp; <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server\">How to use SFTP</a>.</p> <p>You <a href=\"https://www.nerdster.com.au/info/knowledge-base/sftp-with-filezilla-server/\">can use SFTP with FileZilla</a>, client and server.</p>"
    }
]